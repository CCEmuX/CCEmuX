plugins {
	id 'java-library'
	id 'application'
	id 'com.github.johnrengelman.shadow' version '2.0.1'
	id 'eclipse'
	id 'idea'
}

allprojects {
	apply plugin: 'java-library'
	apply plugin: 'eclipse'
	apply plugin: 'idea'

	group = 'net.clgd'
	version = '1.0.0'

	sourceCompatibility = 1.8
	targetCompatibility = 1.8

	eclipse.project {
		natures 'org.eclipse.buildship.core.gradleprojectnature'
		natures 'org.springsource.ide.eclipse.gradle.core.nature'
	}

	repositories {
		mavenCentral()
	}

	dependencies {
		compileOnly 'org.projectlombok:lombok:1.16.20'
		testCompileOnly 'org.projectlombok:lombok:1.16.20'

		compileOnly 'com.google.auto.service:auto-service:1.0-rc3'
	}

	gradle.projectsEvaluated {
		tasks.withType(JavaCompile) {
			options.compilerArgs << "-Xlint" << "-Xlint:-processing" << "-Xlint:-rawtypes" << "-Xlint:-classfile"
		}
	}
}

mainClassName = 'net.clgd.ccemux.init.Launcher'

repositories {
	maven {
		name = "cc.crzd.me"
		url = "http://cc.crzd.me/maven"
	}

	maven {
		name = 'cc-tweaked'
		url = "http://squiddev.cc/maven/"
	}
}

configurations {
	computercraft
}
dependencies {
	api project(':plugin-api')

	implementation 'org.apache.logging.log4j:log4j-slf4j-impl:2.8.2'
	implementation 'org.apache.logging.log4j:log4j-core:2.8.2'

	implementation 'commons-cli:commons-cli:1.4'
	implementation 'org.apache.commons:commons-lang3:3.6'
	implementation 'io.netty:netty-all:4.1.9.Final'

	implementation 'com.google.code.gson:gson:2.8.1'

	testCompile 'junit:junit:4.12'

	computercraft 'dan200.computercraft:ComputerCraft:1.80pr1-build5'
}

processResources {
	exclude '**/*.xcf' // GIMP images

	filesMatching("ccemux.version") {
		expand 'version': version
	}
}

jar {
	manifest {
		attributes 'SplashScreen-Image': 'img/splash2.gif'
		attributes 'Implementation-Version': version
		attributes 'Main-Class': mainClassName
	}
}

import com.github.jengelman.gradle.plugins.shadow.tasks.ShadowJar

shadowJar {
	classifier = 'base'
	description "A shadowed jar which bundles all dependencies aside from CC"

	from sourceSets.main.output
	configurations = [project.configurations.runtimeClasspath]

	exclude '*.html'
	exclude 'META-INF/maven/*/*/*.*'

	dependencies {
		exclude dependency('.*:cc-tweaked:.*')
	}
}

task cctweakedJar(type: ShadowJar) {
	classifier = 'cct'
	description "A shadowed jar which bundles CC: Tweaked"

	from sourceSets.main.output
	configurations = [project.configurations.runtimeClasspath]
	manifest.inheritFrom jar.manifest

	exclude '*.html'
	exclude 'META-INF/maven/*/*/*.*'
}

task computercraftJar(type: ShadowJar) {
	classifier = 'cc'
	description "A shadowed jar which bundles ComputerCraft"

	from sourceSets.main.output
	configurations = [project.configurations.runtimeClasspath, project.configurations.computercraft]
	manifest.inheritFrom jar.manifest

	exclude '*.html'
	exclude 'META-INF/maven/*/*/*.*'

	dependencies {
		exclude dependency('.*:cc-tweaked:.*')
	}
}

gradle.projectsEvaluated {
	tasks.withType(ShadowJar) {
		// Append the base license files
		append 'META-INF/LICENSE'
		append 'META-INF/LICENSE.txt'
		append 'META-INF/NOTICE'
		append 'META-INF/NOTICE.txt'

		// Exclude random junk
		exclude '*.html'
		exclude 'META-INF/maven/*/*/*.*'

		// Prune arbitrary stuff from the CC jar
		exclude(['api/dan200/**', 'docs/dan200/**' ])
		exclude([ 'assets/computercraft/**/*.json' ])
	}
}

run { standardInput = System.in }
runShadow { standardInput = System.in }

assemble.dependsOn shadowJar
assemble.dependsOn cctweakedJar
assemble.dependsOn computercraftJar
