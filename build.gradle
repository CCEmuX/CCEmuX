buildscript {
	ext.kotlin_version = '1.0.5-2'
	repositories {
        mavenLocal()
        mavenCentral()
        maven { url "https://oss.sonatype.org/content/repositories/snapshots/" }
        jcenter()
    }
	dependencies {
		classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
	}
}

plugins {
	id 'application'
	id 'com.github.johnrengelman.shadow' version '1.2.3'
	id 'eclipse'
	id 'idea'
}

apply plugin: 'kotlin'

group = 'net.clgd'
version = '1.0-SNAPSHOT'

mainClassName = 'net.clgd.ccemux.Launcher'

sourceCompatibility = 1.8
targetCompatibility = 1.8

// load CC properties
project.ext.cc = new Properties()
file('cc.properties').withInputStream {
	stream -> cc.load(stream)
}

repositories {
	mavenCentral()

	ivy {
		name = 'computercraft'
		artifactPattern cc.ccPatternRemote
	}

	maven {
		name = "squiddev"
		url = "https://dl.bintray.com/squiddev/maven"
	}
	maven {
		name = "snapshots"
		url = "https://oss.sonatype.org/content/repositories/snapshots/"
	}
}

dependencies {
	compile 'org.eclipse.xtend:org.eclipse.xtend.lib:2.10.0'

	compileOnly ":${cc.ccModule}:${cc.ccRevision}"

	compile 'org.slf4j:slf4j-simple:1.7.21'

	compile 'commons-io:commons-io:2.5'
	compile 'commons-cli:commons-cli:1.3.1'
	compile 'commons-codec:commons-codec:1.10'
	compile('org.squiddev:cctweaks-lua:1.1.0') {
		exclude module: 'ConfigGen'
	}

	compile 'com.google.guava:guava:11.0.2'

	testCompile 'junit:junit:4.12'
	compile "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
}

task('customRom', type: Zip) {
	from 'src/main/rom'

	include '*'
	include '*/*'

	archiveName 'custom.rom'
	destinationDir = file('src/main/resources')
}

processResources {
	// contains CC metadata - eg version and URL
	from('cc.properties')
}.dependsOn customRom

jar {
	manifest {
		attributes 'SplashScreen-Image': 'splash1.png', 'Implementation-Version': version
	}
}

shadowJar {
	classifier = null

	exclude '*.html'
	exclude 'META-INF/maven/*/*/*.*'
}

// enable trace logging when running via gradle
run {
	args "-l trace"
	standardInput = System.in
}

runShadow {
	args "-l trace"
	standardInput = System.in
}

build.dependsOn shadowJar
