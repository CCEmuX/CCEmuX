buildscript {
	dependencies {
		classpath 'net.sf.proguard:proguard-gradle:6.1.0beta1'
		classpath 'com.google.code.gson:gson:2.8.1'
	}
}

plugins {
	id 'application'
	id 'com.github.johnrengelman.shadow' version '7.0.0'
	id 'eclipse'
}

allprojects { it ->
	group = 'net.clgd'
	version = '1.0.0' + (System.getenv("GITHUB_SHA") == null ? '' : "-${System.getenv("GITHUB_SHA")}")

	sourceCompatibility = 1.8
	targetCompatibility = 1.8

	eclipse.project {
		natures 'org.eclipse.buildship.core.gradleprojectnature'
		natures 'org.springsource.ide.eclipse.gradle.core.nature'
	}

	repositories {
		mavenCentral()

		maven {
			name = 'cc-tweaked'
			url = "https://squiddev.cc/maven/"
		}
	}

	gradle.projectsEvaluated {
		tasks.withType(JavaCompile) {
			options.compilerArgs << "-Xlint" << "-Xlint:-processing" << "-Xlint:-rawtypes" << "-Xlint:-classfile"
		}
	}
}

mainClassName = 'net.clgd.ccemux.init.Launcher'

dependencies {
	implementation project(':plugin-api')

	implementation 'org.apache.logging.log4j:log4j-slf4j-impl:2.11.2'
	implementation 'org.apache.logging.log4j:log4j-core:2.11.2'

	implementation 'commons-cli:commons-cli:1.4'
	implementation 'org.apache.commons:commons-lang3:3.6'
	implementation 'io.netty:netty-all:4.1.9.Final'
	implementation 'it.unimi.dsi:fastutil:8.3.0'
	implementation 'org.ow2.asm:asm:8.0.1'

	implementation 'com.google.code.gson:gson:2.8.1'

	compileOnly 'org.projectlombok:lombok:1.18.10'
	annotationProcessor 'org.projectlombok:lombok:1.18.10'

	compileOnly 'com.google.auto.service:auto-service:1.0-rc6'
	annotationProcessor 'com.google.auto.service:auto-service:1.0-rc6'

	testImplementation 'junit:junit:4.12'
	testCompileOnly 'org.projectlombok:lombok:1.18.10'
}

processResources {
	exclude '**/*.xcf' // GIMP images

	filesMatching("ccemux.version") {
		expand 'version': version, 'cc_version': cc_version
	}
}

jar {
	manifest {
		attributes 'SplashScreen-Image': 'img/splash2.gif'
		attributes 'Implementation-Version': version
		attributes 'Main-Class': mainClassName
	}
}

import com.github.jengelman.gradle.plugins.shadow.tasks.ShadowJar
import proguard.gradle.ProGuardTask

shadowJar {
	archiveClassifier = 'cct'
	description "A shadowed jar which bundles all dependencies"

	from sourceSets.main.output
	minimize {
		exclude(dependency('org.slf4j:.*:.*'))
		exclude(dependency('org.apache.logging.log4j:.*:.*'))
	}
}

gradle.projectsEvaluated {
	tasks.withType(ShadowJar) {
		// Append the base license files
		append 'META-INF/LICENSE'
		append 'META-INF/LICENSE.txt'
		append 'META-INF/NOTICE'
		append 'META-INF/NOTICE.txt'

		// Exclude random junk
		exclude '*.html'
		exclude 'META-INF/maven/*/*/*.*'

		// Prune arbitrary stuff from the CC jar
		exclude([
			'assets/computercraft/**/*.json',
			'data/computercraft/**/*.json',
			'assets/computercraft/textures/blocks/*',
			'assets/computercraft/textures/items/*'
		])
	}
}

run { standardInput = System.in }
runShadow { standardInput = System.in }

assemble.dependsOn tasks.withType(ShadowJar)
