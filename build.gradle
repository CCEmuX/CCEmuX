plugins {
	id 'java-library'
	id 'application'
	id 'com.github.johnrengelman.shadow' version '2.0.1'
	id 'eclipse'
	id 'idea'
}

allprojects {
	apply plugin: 'java-library'
	apply plugin: 'eclipse'
	apply plugin: 'idea'

	group = 'net.clgd'
	version = '1.0.0'
	
	sourceCompatibility = 1.8
	targetCompatibility = 1.8
	
	eclipse.project {
		natures 'org.eclipse.buildship.core.gradleprojectnature'
		natures 'org.springsource.ide.eclipse.gradle.core.nature'
	}
	
	repositories {
		mavenLocal()
		mavenCentral()
	}
	
	dependencies {
		compileOnly 'org.projectlombok:lombok:1.16.20'
		testCompileOnly 'org.projectlombok:lombok:1.16.20'
	
		compileOnly 'com.google.auto.service:auto-service:1.0-rc3'
	}
}

mainClassName = 'net.clgd.ccemux.init.Launcher'

repositories {
	maven {
		name = 'computercraft'
		url = "https://cc.crzd.me/maven"
	}

	maven {
		name = "squiddev"
		url = "https://dl.bintray.com/squiddev/maven"
	}
}

dependencies {
	api project(':plugin-api')

	implementation 'org.apache.logging.log4j:log4j-slf4j-impl:2.8.2'
	implementation 'org.apache.logging.log4j:log4j-core:2.8.2'

	implementation 'commons-io:commons-io:2.5'
	implementation 'commons-cli:commons-cli:1.4'
	implementation 'org.apache.commons:commons-lang3:3.6'

	implementation 'org.squiddev:cctweaks-lua:1.5.0-pr4'

	implementation 'com.google.code.gson:gson:2.8.1'

	testCompile 'junit:junit:4.12'
}

processResources {
	exclude '**/*.xcf' // GIMP images
	
	filesMatching("ccemux.version") {
		expand 'version': version
	}
}

jar {
	manifest {
		attributes 'SplashScreen-Image': 'img/splash2.gif', 'Implementation-Version': version
	}
}

shadowJar {
	classifier = 'all'

	exclude '*.html'
	exclude 'META-INF/maven/*/*/*.*'
}

import com.github.jengelman.gradle.plugins.shadow.tasks.ShadowJar

task noCCJar (type: ShadowJar) {
	classifier = 'no-cc'

	from sourceSets.main.output
	configurations = [
		project.configurations.runtimeClasspath
	]

	exclude '*.html'
	exclude 'META-INF/maven/*/*/*.*'

	dependencies {
		exclude(dependency('.*:ComputerCraft:.*'))
	}
}

run { standardInput = System.in }
runShadow { standardInput = System.in }

build.dependsOn shadowJar
build.dependsOn noCCJar
